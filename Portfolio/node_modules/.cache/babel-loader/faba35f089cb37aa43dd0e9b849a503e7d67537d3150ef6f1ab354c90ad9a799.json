{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HomeView from \"../views/HomeView.vue\";\nvar routes = [{\n  path: \"/\",\n  name: \"Home\",\n  component: HomeView\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes,\n  scrollBehavior: function scrollBehavior() {\n    document.getElementById(\"app\").scrollIntoView();\n  }\n});\nexport default router;\n\n/**\n * Below code will display the component/active page title\n * Powered by: Nangialai Stoman\n */\n\n// This callback runs before every route change, including on page load.\nrouter.beforeEach(function (to, from, next) {\n  // This goes through the matched routes from last to first, finding the closest route with a title.\n  // e.g., if we have `/some/deep/nested/route` and `/some`, `/deep`, and `/nested` have titles,\n  // `/nested`'s will be chosen.\n  var nearestWithTitle = to.matched.slice().reverse().find(function (r) {\n    return r.meta && r.meta.title;\n  });\n\n  // Find the nearest route element with meta tags.\n  var nearestWithMeta = to.matched.slice().reverse().find(function (r) {\n    return r.meta && r.meta.metaTags;\n  });\n  var previousNearestWithMeta = from.matched.slice().reverse().find(function (r) {\n    return r.meta && r.meta.metaTags;\n  });\n\n  // If a route with a title was found, set the document (page) title to that value.\n  if (nearestWithTitle) {\n    document.title = nearestWithTitle.meta.title;\n  } else if (previousNearestWithMeta) {\n    document.title = previousNearestWithMeta.meta.title;\n  }\n\n  // Remove any stale meta tags from the document using the key attribute we set below.\n  Array.from(document.querySelectorAll(\"[data-vue-router-controlled]\")).map(function (el) {\n    return el.parentNode.removeChild(el);\n  });\n\n  // Skip rendering meta tags if there are none.\n  if (!nearestWithMeta) return next();\n\n  // Turn the meta tag definitions into actual elements in the head.\n  nearestWithMeta.meta.metaTags.map(function (tagDef) {\n    var tag = document.createElement(\"meta\");\n    Object.keys(tagDef).forEach(function (key) {\n      tag.setAttribute(key, tagDef[key]);\n    });\n\n    // We use this to track which meta tags we create so we don't interfere with other ones.\n    tag.setAttribute(\"data-vue-router-controlled\", \"\");\n    return tag;\n  })\n  // Add the meta tags to the document head.\n  .forEach(function (tag) {\n    return document.head.appendChild(tag);\n  });\n  next();\n});","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","routes","path","name","component","router","history","process","env","BASE_URL","scrollBehavior","document","getElementById","scrollIntoView","beforeEach","to","from","next","nearestWithTitle","matched","slice","reverse","find","r","meta","title","nearestWithMeta","metaTags","previousNearestWithMeta","Array","querySelectorAll","map","el","parentNode","removeChild","tagDef","tag","createElement","Object","keys","forEach","key","setAttribute","head","appendChild"],"sources":["/Users/vedant/Documents/GitHub/portfolio/vedantpople4.github.io/Portfolio/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\nimport HomeView from \"../views/HomeView.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: HomeView,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior() {\n    document.getElementById(\"app\").scrollIntoView();\n  },\n});\n\nexport default router;\n\n/**\n * Below code will display the component/active page title\n * Powered by: Nangialai Stoman\n */\n\n// This callback runs before every route change, including on page load.\nrouter.beforeEach((to, from, next) => {\n  // This goes through the matched routes from last to first, finding the closest route with a title.\n  // e.g., if we have `/some/deep/nested/route` and `/some`, `/deep`, and `/nested` have titles,\n  // `/nested`'s will be chosen.\n  const nearestWithTitle = to.matched\n    .slice()\n    .reverse()\n    .find((r) => r.meta && r.meta.title);\n\n  // Find the nearest route element with meta tags.\n  const nearestWithMeta = to.matched\n    .slice()\n    .reverse()\n    .find((r) => r.meta && r.meta.metaTags);\n\n  const previousNearestWithMeta = from.matched\n    .slice()\n    .reverse()\n    .find((r) => r.meta && r.meta.metaTags);\n\n  // If a route with a title was found, set the document (page) title to that value.\n  if (nearestWithTitle) {\n    document.title = nearestWithTitle.meta.title;\n  } else if (previousNearestWithMeta) {\n    document.title = previousNearestWithMeta.meta.title;\n  }\n\n  // Remove any stale meta tags from the document using the key attribute we set below.\n  Array.from(document.querySelectorAll(\"[data-vue-router-controlled]\")).map(\n    (el) => el.parentNode.removeChild(el)\n  );\n\n  // Skip rendering meta tags if there are none.\n  if (!nearestWithMeta) return next();\n\n  // Turn the meta tag definitions into actual elements in the head.\n  nearestWithMeta.meta.metaTags\n    .map((tagDef) => {\n      const tag = document.createElement(\"meta\");\n\n      Object.keys(tagDef).forEach((key) => {\n        tag.setAttribute(key, tagDef[key]);\n      });\n\n      // We use this to track which meta tags we create so we don't interfere with other ones.\n      tag.setAttribute(\"data-vue-router-controlled\", \"\");\n\n      return tag;\n    })\n    // Add the meta tags to the document head.\n    .forEach((tag) => document.head.appendChild(tag));\n\n  next();\n});\n"],"mappings":";;;;;;;;;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,IAAMK,MAAM,GAAGP,YAAY,CAAC;EAC1BQ,OAAO,EAAEP,gBAAgB,CAACQ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CR,MAAM,EAANA,MAAM;EACNS,cAAc,WAAAA,eAAA,EAAG;IACfC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,cAAc,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM;;AAErB;AACA;AACA;AACA;;AAEA;AACAA,MAAM,CAACS,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC;EACA;EACA;EACA,IAAMC,gBAAgB,GAAGH,EAAE,CAACI,OAAO,CAChCC,KAAK,CAAC,CAAC,CACPC,OAAO,CAAC,CAAC,CACTC,IAAI,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACC,IAAI,CAACC,KAAK;EAAA,EAAC;;EAEtC;EACA,IAAMC,eAAe,GAAGX,EAAE,CAACI,OAAO,CAC/BC,KAAK,CAAC,CAAC,CACPC,OAAO,CAAC,CAAC,CACTC,IAAI,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACC,IAAI,CAACG,QAAQ;EAAA,EAAC;EAEzC,IAAMC,uBAAuB,GAAGZ,IAAI,CAACG,OAAO,CACzCC,KAAK,CAAC,CAAC,CACPC,OAAO,CAAC,CAAC,CACTC,IAAI,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACC,IAAI,CAACG,QAAQ;EAAA,EAAC;;EAEzC;EACA,IAAIT,gBAAgB,EAAE;IACpBP,QAAQ,CAACc,KAAK,GAAGP,gBAAgB,CAACM,IAAI,CAACC,KAAK;EAC9C,CAAC,MAAM,IAAIG,uBAAuB,EAAE;IAClCjB,QAAQ,CAACc,KAAK,GAAGG,uBAAuB,CAACJ,IAAI,CAACC,KAAK;EACrD;;EAEA;EACAI,KAAK,CAACb,IAAI,CAACL,QAAQ,CAACmB,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,CAACC,GAAG,CACvE,UAACC,EAAE;IAAA,OAAKA,EAAE,CAACC,UAAU,CAACC,WAAW,CAACF,EAAE,CAAC;EAAA,CACvC,CAAC;;EAED;EACA,IAAI,CAACN,eAAe,EAAE,OAAOT,IAAI,CAAC,CAAC;;EAEnC;EACAS,eAAe,CAACF,IAAI,CAACG,QAAQ,CAC1BI,GAAG,CAAC,UAACI,MAAM,EAAK;IACf,IAAMC,GAAG,GAAGzB,QAAQ,CAAC0B,aAAa,CAAC,MAAM,CAAC;IAE1CC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAAC,UAACC,GAAG,EAAK;MACnCL,GAAG,CAACM,YAAY,CAACD,GAAG,EAAEN,MAAM,CAACM,GAAG,CAAC,CAAC;IACpC,CAAC,CAAC;;IAEF;IACAL,GAAG,CAACM,YAAY,CAAC,4BAA4B,EAAE,EAAE,CAAC;IAElD,OAAON,GAAG;EACZ,CAAC;EACD;EAAA,CACCI,OAAO,CAAC,UAACJ,GAAG;IAAA,OAAKzB,QAAQ,CAACgC,IAAI,CAACC,WAAW,CAACR,GAAG,CAAC;EAAA,EAAC;EAEnDnB,IAAI,CAAC,CAAC;AACR,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}